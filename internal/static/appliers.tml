{{ $handle := (subs .Str.Name 1 | toLower) }}
var (
	// {{.Str.Name}}AggregateID represents the unique aggregate id for all events
	// related to the {{.Str.Name}} type. It is the typeName hashed using a md5 sum.
	{{.Str.Name}}AggregateID = {{ joinVariadic ":" .Str.Name "Aggregate" | md5 | quote }}
)

//*******************************************************************************
// {{.Str.Name}} Event Applier 
//*******************************************************************************

// Apply embodies the internal logic necessary to apply specific events to a {{.Str.Name}} by
// calling appropriate methods.
func ({{$handle}} *{{.Str.Name}}) Apply(evs ...cqrskit.Event) error {
	for _, event := range evs {
		switch ev := event.EventData.(type) {
		{{ range $_, $pair := .Pairs }}case {{$pair.TypeName}}:
			return {{$handle}}.{{$pair.Method.FuncName}}(ev)
		{{end}}
		}
	}
	return nil
}

